{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","send","dado","setRequestHeader","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;4BAEEC,G,EAAI;;AAEJ;AACA;AACA,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,oBAAIC,MAAM,IAAIC,cAAJ,EAAV;AACA;AACA;AACA;AACAD,oBAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;;AAEA;AACAI,oBAAIG,kBAAJ,GAAyB,YAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,wBAAIH,IAAII,UAAJ,IAAkB,CAAtB,EAAwB;AACpB;AACA,4BAAIJ,IAAIK,MAAJ,IAAc,GAAlB,EAAsB;AAClB;AACA;AACAP,oCAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;;AAEA;AACH,yBAND,MAMO;AACH;AACAT,mCAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,iBAnBD;AAoBA;;AAEA;AACAR,oBAAIS,IAAJ;AACH,aAjCM,CAAP;AAmCH;;;6BAEIb,G,EAAKc,I,EAAK;AACX,mBAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,MAAM,IAAIC,cAAJ,EAAV;;AAEAD,oBAAIE,IAAJ,CAAS,MAAT,EAAiBN,GAAjB,EAAsB,IAAtB;AACAI,oBAAIW,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;AACAX,oBAAIG,kBAAJ,GAAyB,YAAM;;AAE3B,wBAAIH,IAAII,UAAJ,IAAkB,CAAtB,EAAwB;;AAEpB,4BAAIJ,IAAIK,MAAJ,IAAc,GAAlB,EAAsB;AAClBP,oCAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AAEH,yBAHD,MAGO;AACHT,mCAAOC,IAAIQ,YAAX;AACH;AAEJ;AACJ,iBAZD;;AAcAR,oBAAIS,IAAJ,CAASH,KAAKM,SAAL,CAAeF,IAAf,CAAT;AACH,aArBM,CAAP;AAsBH","file":"HttpService.js","sourcesContent":["class HttpService{\r\n\r\n    get(url){\r\n\r\n        //1-retorna uma funcao que executara em caso de sucesso\r\n        //2-retorna uma mensagem de erro em caso de erro\r\n        return new Promise((resolve, reject) => {\r\n            //instancio o objeto para lidar com AJAX\r\n            let xhr = new XMLHttpRequest();\r\n            //configuro o endereco e o metodo que sera acessado via ajax\r\n            //se for um endereco externo, da web, deve estar o endereco completo,\r\n            //como neste caso o endereco eh local, esta apenas o caminho relativo\r\n            xhr.open('GET', url);\r\n    \r\n            /*configuracoes*/\r\n            xhr.onreadystatechange = () => {\r\n                //0: requisição ainda não iniciada\r\n                //1: conexão com o servidor estabelecida\r\n                //2: requisição recebida\r\n                //3: processando requisição\r\n                //4: requisição está concluída e a resposta está pronta            \r\n                if (xhr.readyState == 4){\r\n                    //200-ok\r\n                    if (xhr.status == 200){\r\n                        //1-o ajax retorna texto\r\n                        //2-eh necessario converter para uma lista de json\r\n                        resolve(JSON.parse(xhr.responseText));\r\n    \r\n                        //this._mensagem.texto = \"Lista de negociações carregada com sucesso.\";\r\n                    } else {\r\n                        //do something\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            }\r\n            /*configuracoes*/\r\n    \r\n            //processa a requisicao\r\n            xhr.send();\r\n        });\r\n\r\n    }\r\n\r\n    post(url, dado){\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n\r\n            xhr.open('POST', url, true);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            xhr.onreadystatechange = () => {\r\n\r\n                if (xhr.readyState == 4){\r\n\r\n                    if (xhr.status == 200){\r\n                        resolve(JSON.parse(xhr.responseText));\r\n    \r\n                    } else {\r\n                        reject(xhr.responseText);\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            xhr.send(JSON.stringify(dado));\r\n        });\r\n    }    \r\n}"]}